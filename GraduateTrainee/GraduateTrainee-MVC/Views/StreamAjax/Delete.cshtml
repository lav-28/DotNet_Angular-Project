<h1>Delete category</h1>

<div>
    <h4>Are you sure you want to delete this category?</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            Stream Name
        </dt>
        <dd class="col-sm-10">
            <label id="streamName"></label>
        </dd>
        <dt class="col-sm-2">
            Stream Description
        </dt>
        <dd class="col-sm-10">
            <label id="streamDescription"></label>
        </dd>
        <dt class="col-sm-2">
            Degree Name
        </dt>
        <dd class="col-sm-10">
            <label id="degreeName"></label>
        </dd>
        <dt class="col-sm-2">
            Degree Description
        </dt>
        <dd class="col-sm-10">
            <label id="degreeDescription"></label>
        </dd>
    </dl>
    <form id="deleteCategoryForm">
        <input type="hidden" id="streamId" />
        <div class="form-group">
            <input type="submit" value="Delete" class="btn btn-danger" /> |
            <a asp-action="Index">Back to List</a>
        </div>
    </form>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script src="~/js/categorydelete.js"></script>
<script>
    $(document).ready(function () {
        GetCategoryById();

        $('#deleteCategoryForm').submit(function (e) {
            e.preventDefault();
            DeleteStream();
        })
    });

    function DeleteStream() {
        $('#loader').show();
        var currentUrl = window.location.href;
        var id = currentUrl.substring(currentUrl.lastIndexOf('/') + 1);

        let streamId = $('#streamId').val().trim();
        // Get jwtToken cookie value
        // Retrieve 'jwtToken' cookie value
        const jwtToken = getCookie('jwtToken');
        if (!jwtToken) {
            // Redirect to login page if jwtToken cookie is not available
            window.location.href = '/auth/login';
            return; // Stop further execution
        }
        $.ajax({
            url: "http://localhost:5134/api/Steam/Remove/" + id,
            type: 'DELETE',
            dataType: 'json',
            headers: {
                'Authorization': 'Bearer ' + jwtToken
            },
            success: function (response) {
                if (response.success) {
                    ShowMessage(response.message);
                    $('#loader').hide();
                }
            },
            error: function (xhr, status, error) {
                // Check if there is a responseText available
                if (xhr.responseText) {
                    try {
                        // Parse the responseText into a JavaScript object
                        var errorResponse = JSON.parse(xhr.responseText);

                        // Check the properties of the errorResponse object
                        if (errorResponse && errorResponse.message) {
                            // Display the error message to the user
                            alert('Error: ' + errorResponse.message);
                        } else {
                            // Display a generic error message
                            alert('An error occurred. Please try again. ');
                        }

                    } catch (parseError) {
                        console.error('Error parsing response:', parseError);
                        alert('An error occurred. Please try again. ');
                    }
                } else {
                    // Display a generic error message if no responseText is available
                    alert('An unexpected error occurred. Please try again. ');
                }
            },
            complete: function () {
                $('#loader').hide();
            }
        });
    }

    function GetCategoryById() {
        $('#loader').show();
        var currentUrl = window.location.href;
        var id = currentUrl.substring(currentUrl.lastIndexOf('/') + 1);
        // Get jwtToken cookie value
        // Retrieve 'jwtToken' cookie value
        const jwtToken = getCookie('jwtToken');
        if (!jwtToken) {
            // Redirect to login page if jwtToken cookie is not available
            window.location.href = '/auth/login';
            return; // Stop further execution
        }
        $.ajax({
            url: "http://localhost:5134/api/Steam/GetStreamById/" + id,
            type: 'GET',
            dataType: 'json',
            headers: {
                'Authorization': 'Bearer ' + jwtToken
            },
            success: function (response) {
                if (response.success) {
                    $('#streamName').html(response.data.streamName);
                    $('#streamDescription').html(response.data.streamDescription);
                    $('#degreeName').html(response.data.degree.degreeName);
                    $('#degreeDescription').html(response.data.degree.degreeDescription);
                }
            },
            error: function (xhr, status, error) {
                // Check if there is a responseText available
                if (xhr.responseText) {
                    try {
                        // Parse the responseText into a JavaScript object
                        var errorResponse = JSON.parse(xhr.responseText);

                        // Check the properties of the errorResponse object
                        if (errorResponse && errorResponse.message) {
                            // Display the error message to the user
                            alert('Error: ' + errorResponse.message);
                        } else {
                            // Display a generic error message
                            alert('An error occurred. Please try again. ');
                        }

                    } catch (parseError) {
                        console.error('Error parsing response:', parseError);
                        alert('An error occurred. Please try again. ');
                    }
                } else {
                    // Display a generic error message if no responseText is available
                    alert('An unexpected error occurred. Please try again. ');
                }
            },
            complete: function () {
                $('#loader').hide();
            }
        });
    }
    function getCookie(name) {
        const cookieValue = document.cookie
            .split('; ')
            .find(cookie => cookie.startsWith(name + '='))
            ?.split('=')[1];
        return cookieValue ? decodeURIComponent(cookieValue) : null;
    }
    function ShowMessage(message) {
        // Get the message container
        var messageContainer = document.getElementById('messageContainer');

        // Display success message
        messageContainer.textContent = message;
        messageContainer.style.backgroundColor = '#4CAF50';
        messageContainer.style.opacity = '1';

        // Hide the message after 3 seconds (3000 milliseconds)
        setTimeout(function () {
            messageContainer.style.opacity = '0';
        }, 3000);

        // Redirect to index page after a short delay (optional)
        setTimeout(function () {
            window.location.href = "/StreamAjax/Index";
        }, 3500); // Redirect after 3.5 seconds (3500 milliseconds)
    }
</script>
