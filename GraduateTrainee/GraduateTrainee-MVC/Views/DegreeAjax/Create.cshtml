<h1>Add Degree</h1>
<div id="validationSummary" class="text-danger" style="display:none">
</div>
<form id="createDegreeForm">
    <div class="form-group">
        <label for="DegreeName" class="control-label">Degree name</label>
        <input id="DegreeName" class="form-control " />
    </div>
    <div class="form-group">
        <label for="DegreeDescription" class="control-label">Degree description</label>
        <input id="DegreeDescription" class="form-control " />
    </div>
    <div class="form-group">
        <input type="submit" value="save" class="btn btn-primary" />
        <a asp-action="Index">Cancel</a>
</form>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('#createDegreeForm').submit(function (e) {
            e.preventDefault() // prevent default from submission.
            if (ValidationCategoryForm()) {
                let degreeName = $('#DegreeName').val().trim();
                let degreeDescription = $('#DegreeDescription').val().trim();

                var requestData = {
                    DegreeName: degreeName,
                    DegreeDescription: degreeDescription
                }
                // $('#loader').show();
                // Get jwtToken cookie value
                // Retrieve 'jwtToken' cookie value
                const jwtToken = getCookie('jwtToken');
                if (!jwtToken) {
                    // Redirect to login page if jwtToken cookie is not available
                    window.location.href = '/auth/login';
                    return; // Stop further execution
                }
                $.ajax({
                    url: "http://localhost:5134/api/Degree/Create",
                    type: "Post",
                    contentType: "application/json",
                    data: JSON.stringify(requestData),
                    headers: {
                        'Authorization': 'Bearer ' + jwtToken
                    },
                    success: function (response) {
                        ShowMessage(response.message);
                        // alert(response.message);
                        // window.location.href = "/CategoryAjax/Index";
                    },
                    error: function (xhr, status, error) {
                        // alert('Something went wrong,please try after some time.');
                        //check if there is a responseText available
                        if (xhr.responseText) {
                            try {
                                // Parse the responseText into a JavaScript object
                                var errorResponse = JSON.parse(xhr.responseText);

                                // Check the properties of the errorResponse object
                                if (errorResponse && errorResponse.message) {
                                    //Display the error message to user
                                    alert('Error : ' + errorResponse.message);
                                }
                                else {
                                    //Display a generic error message
                                    alert('An error occured.Please try again ');
                                }
                            } catch (parseError) {
                                console.error('Error parsing response:' + parseError);
                                alert('An error occured.please try again.');
                            }
                        }
                        else {
                            //Display a generic error message if no responseText is available
                            alert('An unexpected error occured.Please try again.');
                        }
                    },
                    // complete: function () {
                    //     $('#loader').hide();
                    // }
                });
            }
        });
    });
    function getCookie(name) {
        const cookieValue = document.cookie
            .split('; ')
            .find(cookie => cookie.startsWith(name + '='))
            ?.split('=')[1];
        return cookieValue ? decodeURIComponent(cookieValue) : null;
    }
    function ValidationCategoryForm() {
        // e.preventDefault() //Prevent default form submission.
        let degreeName = $('#DegreeName').val().trim();
        let degreeDescription = $('#DegreeDescription').val().trim();
        $('#validationSummary').empty().hide();
        let isValid = true;
        if (degreeName.length === 0) {
            $('#validationSummary').append('<p>Degree name is required.</p>')
            isValid = false;

        }
        if (degreeDescription.length === 0) {
            $('#validationSummary').append('<p>Degree description is required.</p>')
            isValid = false;
        }
        if (!isValid) {
            $('#validationSummary').show();
        }
        return isValid;

    }
    function ShowMessage(message) {
        // Get the message container
        var messageContainer = document.getElementById('messageContainer');

        // Display success message
        messageContainer.textContent = message;
        messageContainer.style.backgroundColor = '#4CAF50';
        messageContainer.style.opacity = '1';

        // Hide the message after 3 seconds (3000 milliseconds)
        setTimeout(function () {
            messageContainer.style.opacity = '0';
        }, 1500);

        // Redirect to index page after a short delay (optional)
        setTimeout(function () {
            window.location.href = "/DegreeAjax/Index";
        }, 1000); // Redirect after 3.5 seconds (3500 milliseconds)
    }
</script>















@* @using GraduateTraineeEnrollmentMVC.ViewModels
@model AddDegreeViewModel

<h1>Add New Degree</h1>
<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="DegreeName" class="control-label"></label>
        <input asp-for="DegreeName" class="form-control" />
        <span asp-validation-for="DegreeName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="DegreeDescription" class="control-label"></label>
        <input asp-for="DegreeDescription" class="form-control" />
        <span asp-validation-for="DegreeDescription" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="Submit" class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-default">Cancel</a>
    </div>
</form> *@