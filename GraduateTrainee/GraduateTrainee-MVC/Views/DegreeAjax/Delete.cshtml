<h1>Delete Degree</h1>
<div>
    <h4>Are you sure you want to delete this degree ?</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">Degree Name</dt>
        <dd class="col-sm-10" id="degreeName"></dd>
        <dt class="col-sm-2">Degree Description </dt>
        <dd class="col-sm-10" id="degreeDescription"></dd>

    </dl>

    <form id="deleteDegree" method="post">
        <input type="hidden" id="degreeId" />
        <div class="form-group">
            <input type="submit" value="Delete" class="btn btn-danger" />
            <a asp-action="Index">Back to List</a>
        </div>

    </form>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        GetDegreeDetails();
        $('#deleteDegree').submit(function (e) {
            e.preventDefault();

            var currentUrl = window.location.href;
            var id = currentUrl.substring(currentUrl.lastIndexOf('/') + 1);
            $('#loader').show();
            let degreeId = $('#degreeId').val().trim();


            $('#loader').show();
            // Get jwtToken cookie value
            // Retrieve 'jwtToken' cookie value
            const jwtToken = getCookie('jwtToken');
            if (!jwtToken) {
                // Redirect to login page if jwtToken cookie is not available
                window.location.href = '/auth/login';
                return; // Stop further execution
            }
            $.ajax({
                url: "http://localhost:5134/api/Degree/Remove/" + id,
                type: 'DELETE',
                contentType: 'application/json',
                headers: {
                    'Authorization': 'Bearer ' + jwtToken
                },
                success: function (response) {
                    ShowMessage(response.message);

                },
                error: function (xhr, status, error) {
                    // Check if there is a responseText available
                    if (xhr.responseText) {
                        try {
                            // Parse the responseText into a JavaScript object
                            var errorResponse = JSON.parse(xhr.responseText);

                            // Check the properties of the errorResponse object
                            if (errorResponse && errorResponse.message) {
                                // Display the error message to the user
                                alert('Error: ' + errorResponse.message);
                            } else {
                                // Display a generic error message
                                alert('An error occurred. Please try again.');
                            }
                        } catch (parseError) {
                            console.error('Error parsing response:', parseError);
                            alert('An error occurred. Please try again.');
                        }
                    } else {
                        // Display a generic error message if no responseText is available
                        alert('An unexpected error occurred. Please try again.');
                    }
                },
                complete: function () {
                    $('#loader').hide();
                }

            });
        });
    });

    function getCookie(name) {
        const cookieValue = document.cookie
            .split('; ')
            .find(cookie => cookie.startsWith(name + '='))
            ?.split('=')[1];
        return cookieValue ? decodeURIComponent(cookieValue) : null;
    }
    function GetDegreeDetails() {
        var currentUrl = window.location.href;
        var id = currentUrl.substring(currentUrl.lastIndexOf('/') + 1);
        $('#loader').show();
        // Get jwtToken cookie value
        // Retrieve 'jwtToken' cookie value
        const jwtToken = getCookie('jwtToken');
        if (!jwtToken) {
            // Redirect to login page if jwtToken cookie is not available
            window.location.href = '/auth/login';
            return; // Stop further execution
        }
        $.ajax({
            url: "http://localhost:5134/api/Degree/GetDegreeById/" + id,
            type: 'GET',
            dataType: 'json',
            headers: {
                'Authorization': 'Bearer ' + jwtToken
            },
            success: function (response) {
                if (response.success) {
                    $('#degreeName').html(response.data.degreeName);
                    $('#degreeDescription').html(response.data.degreeDescription);
                }
            },
            error: function (xhr, status, error) {
                // Check if there is a responseText available
                if (xhr.responseText) {
                    try {
                        // Parse the responseText into a JavaScript object
                        var errorResponse = JSON.parse(xhr.responseText);

                        // Check the properties of the errorResponse object
                        if (errorResponse && errorResponse.message) {
                            // Display the error message to the user
                            alert('Error: ' + errorResponse.message);
                        } else {
                            // Display a generic error message
                            alert('An error occurred. Please try again.');
                        }
                    } catch (parseError) {
                        console.error('Error parsing response:', parseError);
                        alert('An error occurred. Please try again.');
                    }
                } else {
                    // Display a generic error message if no responseText is available
                    alert('An unexpected error occurred. Please try again.');
                }
            },
            complete: function () {
                $('#loader').hide();
            }

        });
    }

    function ShowMessage(message) {
        // Get the message container
        var messageContainer = document.getElementById('messageContainer');

        // Display success message
        messageContainer.textContent = message;
        messageContainer.style.backgroundColor = '#4CAF50';
        messageContainer.style.opacity = '1';

        setTimeout(function () {
            messageContainer.style.opacity = '0';
        }, 1000);

        // Redirect to index page after a short delay (optional)
        setTimeout(function () {
            window.location.href = '/DegreeAjax/Index';
        }, 1500);
    }
</script>








@* @using GraduateTraineeEnrollmentMVC.ViewModels
@model DegreeViewModel

<h1>Delete Degree</h1>
<div>
    <h4>Are you sure ypu want to delete this degree ?</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            Name
        </dt>
        <dd class="col-sm-10">
            @Model.DegreeName
        </dd>

        <dt class="col-sm-2">
            Description
        </dt>
        <dd class="col-sm-10">
            @Model.DegreeDescription
        </dd>
    </dl>
    <form asp-action="DeleteConfirmed" method="post">
        <input type="hidden" asp-for="DegreeId" />
        <div class="form-group">
            <input type="submit" value="Delete" class="btn btn-danger" />|
            <a asp-action="Index">Back to List</a>
        </div>

    </form>
</div> *@