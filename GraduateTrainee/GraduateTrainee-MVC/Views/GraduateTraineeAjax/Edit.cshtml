<h1>Edit Grade</h1>
<form id="gradeForm" asp-action="Edit" method="post">
    <input type="hidden" id="GraduateTraineeId" />
    <div class="form-group" id="">
        <label for="DegreeId">Degree:</label>
        <select id="DegreeId" name="DegreeId" class="form-control">
            <option value="">Select Degree</option>
            <!-- States will be populated dynamically via AJAX -->
        </select>

    </div>

    <div class="form-group" id="stm">
        <label for="StreamId">Stream:</label>
        <select id="StreamId" name="StreamId" class="form-control">
            <option value="">Select Stream</option>
            <!-- States will be populated dynamically via AJAX -->
        </select>

    </div>
    <div class="form-group">
        <label for="TraineeName" class="control-label">Trainee Name</label>
        <input id="TraineeName" class="form-control" />
        <span validation-for="TraineeName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="TraineeEmail" class="control-label">Trainee Email</label>
        <input id="TraineeEmail" class="form-control" />
        <span validation-for="TraineeEmail" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="UniversityName" class="control-label">University Name</label>
        <input id="UniversityName" class="form-control" />
        <span validation-for="UniversityName" class="text-danger"></span>
    </div>
    <br />
    <div class="form-group">
        <label for="IsLastSemesterPending" class="control-label">Is LastSemester Pending</label>
        <input id="IsLastSemesterPending" type="checkbox" />
        <span validation-for="IsLastSemesterPending" class="text-danger"></span>
    </div>
    <br />
    <div class="form-group">
        <label for="Gender" class="control-label">Gender:</label>
        <div class="form-check">
            <input class="form-check-input" type="radio" id="Gender" value="M" id="GenderTrue" />
            <label class="form-check-label" for="Gender">Male</label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="radio" value="F" id="GenderFalse" />
            <label class="form-check-label" for="Gender">Female</label>
        </div>
        <span validation-for="Gender" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="DateOfApplication" class="control-label">Date Of Application</label>
        <input id="DateOfApplication" type="date" class="form-control" />
        <span validation-for="DateOfApplication" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="Image" class="control-label">Image</label>
        <input id="Image" type="datetime" class="form-control" />
    </div>
    <div class="form-group">
        <label for="Ai" class="control-label">Ai Marks</label>
        <input id="Ai" class="form-control" />
        <span validation-for="Ai" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="Python" class="control-label">Phyton Marks</label>
        <input id="Python" class="form-control" />
        <span validation-for="Python" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="BusinessAnalysis" class="control-label">BusinessAnalysis Marks</label>
        <input id="BusinessAnalysis" class="form-control" />
        <span validation-for="BusinessAnalysis" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="MachineLearning" class="control-label">MachineLearning Marks</label>
        <input id="MachineLearning" class="form-control" />
        <span validation-for="MachineLearning" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="Practical" class="control-label">Practical Marks</label>
        <input id="Practical" class="form-control" />
        <span validation-for="Practical" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-default">Cancel</a>
    </div>
</form>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>

<script type="text/javascript">


    $(document).ready(function () {
        GetTraineeData();
        LoadDegree();
        LoadStream();
        UpdateTrainee();

    })


    function GetTraineeData() {
        var currentUrl = window.location.href;
        var id = currentUrl.substring(currentUrl.lastIndexOf('/') + 1);
        $('#loader').show();
        // Get jwtToken cookie value
        // Retrieve 'jwtToken' cookie value
        const jwtToken = getCookie('jwtToken');
        if (!jwtToken) {
            // Redirect to login page if jwtToken cookie is not available
            window.location.href = '/auth/login';
            return; // Stop further execution
        }
        $.ajax({
            url: "http://localhost:5134/api/GraduateTrainee/GetById/" + id,
            type: "GET",
            datatype: "json",
            headers: {
                'Authorization': 'Bearer ' + jwtToken
            },
            success: function (response) {
                $("#GraduateTraineeId").val(response.data.graduateTraineeId);
                $("#DegreeId").val(response.data.degreeId);
                $('#StreamId').val(response.data.streamId);
                $('#TraineeName').val(response.data.traineeName);
                $('#TraineeEmail').val(response.data.traineeEmail);
                $('#UniversityName').val(response.data.universityName);
                $('#IsLastSemesterPending').is(':checked');
                $('#Gender').val(response.data.gender);
                $('#DateOfApplication').val(response.data.dateOfApplication);
                $('#Ai').val(response.data.ai);
                $('#Python').val(response.data.phyton);
                $('#BusinessAnalysis').val(response.data.businessAnalysis);
                $('#MachineLearning').val(response.data.machineLearning);
                $('#Practical').val(response.data.practical);
                $('#Image').val(response.data.image);

            },
            error: function (xhr, status, error) {
                // Check if there is a responseText available
                if (xhr.responseText) {
                    try {
                        // Parse the responseText into a JavaScript object
                        var errorResponse = JSON.parse(xhr.responseText);

                        // Check the properties of the errorResponse object
                        if (errorResponse && errorResponse.message) {
                            // Display the error message to the user
                            alert('Error: ' + errorResponse.message);
                        } else {
                            // Display a generic error message
                            alert('An error occurred. Please try again.');
                        }
                    } catch (parseError) {
                        console.error('Error parsing response:', parseError);
                        alert('An error occurred. Please try again.');
                    }
                } else {
                    // Display a generic error message if no responseText is available
                    alert('An unexpected error occurred. Please try again.');
                }
            },
            complete: function () {
                $('#loader').hide();
            }

        });
    }

    function UpdateTrainee() {
        $('#gradeForm').submit(function (e) {
            e.preventDefault();
            let GtId = $("#GraduateTraineeId").val().trim();
            let DegreeId = $("#DegreeId").val().trim();
            let StreamId = $('#StreamId').val().trim();
            let TraineeName = $('#TraineeName').val().trim();
            let TraineeEmail = $('#TraineeEmail').val().trim();
            let UniversityName = $('#UniversityName').val().trim();
            let IsLastSemesterPending = $('#IsLastSemesterPending').is(':checked');
            let Gender = $('#Gender').val().trim();
            let DateOfApplication = $('#DateOfApplication').val().trim();
            let Ai = $('#Ai').val().trim();
            let Python = $('#Python').val().trim();
            let BusinessAnalysis = $('#BusinessAnalysis').val().trim();
            let MachineLearning = $('#MachineLearning').val().trim();
            let Practical = $('#Practical').val().trim();
            let Image = $('#Image').val().trim();


            var requestData = {
                graduateTraineeId: GtId,
                degreeId: DegreeId,
                streamId: StreamId,
                traineeName: TraineeName,
                traineeEmail: TraineeEmail,
                universityName: UniversityName,
                isLastSemesterPending: IsLastSemesterPending,
                gender: Gender,
                dateOfApplication: DateOfApplication,
                image: Image,
                ai: Ai,
                phyton: Python,
                businessAnalysis: BusinessAnalysis,
                machineLearning: MachineLearning,
                practical: Practical,
            }
            $('#loader').show();
            // Get jwtToken cookie value
            // Retrieve 'jwtToken' cookie value
            const jwtToken = getCookie('jwtToken');
            if (!jwtToken) {
                // Redirect to login page if jwtToken cookie is not available
                window.location.href = '/auth/login';
                return; // Stop further execution
            }
            $.ajax({
                url: "http://localhost:5134/api/GraduateTrainee/UpdateTrainee",
                type: "PUT",
                contentType: 'application/json',
                data: JSON.stringify(requestData),
                headers: {
                    'Authorization': 'Bearer ' + jwtToken
                },
                success: function (response) {
                    ShowMessage(response.message);

                },
                error: function (xhr, status, error) {
                    // Check if there is a responseText available
                    if (xhr.responseText) {
                        try {
                            // Parse the responseText into a JavaScript object
                            var errorResponse = JSON.parse(xhr.responseText);

                            // Check the properties of the errorResponse object
                            if (errorResponse && errorResponse.message) {
                                // Display the error message to the user
                                alert('Error: ' + errorResponse.message);
                            } else {
                                // Display a generic error message
                                alert('An error occurred. Please try again.');
                            }
                        } catch (parseError) {
                            console.error('Error parsing response:', parseError);
                            alert('An error occurred. Please try again.');
                        }
                    } else {
                        // Display a generic error message if no responseText is available
                        alert('An unexpected error occurred. Please try again.');
                    }
                },
                complete: function () {
                    $('#loader').hide();
                }
            });

        })

    }

    function LoadDegree() {

        $('#loader').show();
        // Get jwtToken cookie value
        // Retrieve 'jwtToken' cookie value
        const jwtToken = getCookie('jwtToken');
        if (!jwtToken) {
            // Redirect to login page if jwtToken cookie is not available
            window.location.href = '/auth/login';
            return; // Stop further execution
        }
        $.ajax({
            url: "http://localhost:5134/api/Degree/GetAll",
            type: 'GET',
            dataType: 'json',
            headers: {
                'Authorization': 'Bearer ' + jwtToken
            },
            success: function (response) {
                if (response.success) {
                    $.each(response.data, function (key, value) { //response was passing...
                        var degreeId = value.degreeId;
                        var degreeName = value.degreeName;
                        $("#DegreeId").append($("<option value=" + degreeId + ">" + degreeName + "</option>")
                        );
                    });
                }
            },
            error: function (xhr, status, error) {
                if (xhr.responseText) {

                    try {
                        // Parse the responseText into a JavaScript object
                        var errorResponse = JSON.parse(xhr.responseText);

                        // Check the properties of the errorResponse object
                        if (errorResponse && errorResponse.message) {
                            // Display the error message to the user
                            alert('Error: ' + errorResponse.message);
                        } else {
                            // Display a generic error message
                            alert('An error occurred. Please try again. ');

                        }
                    }
                    catch (parseError) {
                        console.error('Error parsing response:', parseError);
                        alert('An error occurred. Please try again. ');
                    }

                } else {
                    // Display a generic error message if no responseText is available
                    alert('An unexpected error occurred. Please try again. ');
                }
            },
            complete: function () {
                $('#loader').hide();
                LoadStream();
            }

        })

    }

    function LoadStream() {
        document.getElementById('DegreeId').addEventListener('change', function () {
            var selectedDegreeId = this.value;
            if (selectedDegreeId !== '') {
                $('#loader').show();
                // Get jwtToken cookie value
                // Retrieve 'jwtToken' cookie value
                const jwtToken = getCookie('jwtToken');
                if (!jwtToken) {
                    // Redirect to login page if jwtToken cookie is not available
                    window.location.href = '/auth/login';
                    return; // Stop further execution
                }
                $.ajax({
                    url: 'http://localhost:5134/api/Steam/GetStreamByDegreeId/' + selectedDegreeId,
                    type: 'GET',
                    dataType: "json",
                    headers: {
                        'Authorization': 'Bearer ' + jwtToken
                    },
                    success: function (response) {
                        $("#stm").show();

                        $("#StreamId").empty();
                        $.each(response.data, function (key, value) { //response was passing...
                            var streamId = value.streamId;
                            var streamName = value.streamName;
                            $("#StreamId").append($("<option value=" + streamId + ">" + streamName + "</option>")
                            );
                        });
                    },
                    error: function (xhr, status, error) {
                        if (xhr.responseText) {

                            try {
                                // Parse the responseText into a JavaScript object
                                var errorResponse = JSON.parse(xhr.responseText);

                                // Check the properties of the errorResponse object
                                if (errorResponse && errorResponse.message) {

                                    // Display the error message to the user
                                    $("#stm").hide();
                                    alert('Error: ' + errorResponse.message);
                                } else {
                                    // Display a generic error message
                                    alert('An error occurred. Please try again. ');

                                }
                            }
                            catch (parseError) {
                                console.error('Error parsing response:', parseError);
                                alert('An error occurred. Please try again. ');
                            }

                        } else {
                            // Display a generic error message if no responseText is available
                            alert('An unexpected error occurred. Please try again. ');
                        }
                    },
                    complete: function () {
                        $('#loader').hide();
                    }
                });
            } else {
                $('#StreamContainer').html(''); // Clear stream dropdown if no degree selected
            }
        });
    }
    function getCookie(name) {
        const cookieValue = document.cookie
            .split('; ')
            .find(cookie => cookie.startsWith(name + '='))
            ?.split('=')[1];
        return cookieValue ? decodeURIComponent(cookieValue) : null;
    }
    function ValidationCategoryForm() {

        let DegreeName = $('#DegreeName').val().trim();
        let DegreeDescription = $('#DegreeDescription').val().trim();
        $('#validationSummary').empty().hide();
        let isValid = true;

        if (DegreeName.length === 0) {
            $('#validationSummary').append('<p>Degree name is required.</p>');
            isValid = false;
        }
        if (DegreeDescription.length === 0) {
            $('#validationSummary').append('<p>Degree description is required.</p>');
            isValid = false;
        }

        if (!isValid) {
            $('#validationSummary').show();
        }
        return isValid;
    }

    function ShowMessage(message) {
        // Get the message container
        var messageContainer = document.getElementById('messageContainer');

        // Display success message
        messageContainer.textContent = message;
        messageContainer.style.backgroundColor = '#4CAF50';
        messageContainer.style.opacity = '1';

        // Hide the message after 3 seconds (3000 milliseconds)
        setTimeout(function () {
            messageContainer.style.opacity = '0';
        }, 3000);

        // Redirect to index page after a short delay (optional)
        setTimeout(function () {
            window.location.href = '/GraduateTraineeAjax/Index';
        }, 3500); // Redirect after 3.5 seconds (3500 milliseconds)
    }
</script>