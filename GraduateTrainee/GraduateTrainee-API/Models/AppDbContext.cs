// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace GraduateTraineeEnrollmentApi.Models
{
    public partial class AppDbContext : DbContext
    {
        //public AppDbContext()
        //{
        //}

        public AppDbContext(DbContextOptions<AppDbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Degree> Degree { get; set; }
        public virtual DbSet<GraduateTrainees> GraduateTrainees { get; set; }
        public virtual DbSet<Streams> Streams { get; set; }
        public DbSet<User> Users { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Degree>(entity =>
            {
                entity.Property(e => e.DegreeDescription)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DegreeName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GraduateTrainees>(entity =>
            {
                entity.HasKey(e => e.GraduateTraineeId)
                    .HasName("PK__Graduate__D5A8F04CC1671608");

                entity.Property(e => e.Ai)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("AI");

                entity.Property(e => e.BusinessAnalysis).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.DateOfApplication).HasColumnType("date");

                entity.Property(e => e.Gender)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Image)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.MachineLearning).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Percentages).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Phyton).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Practical).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.TotalMarks).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.TraineeEmail)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.TraineeName)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.UniversityName)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.HasOne(d => d.Degree)
                    .WithMany(p => p.GraduateTrainees)
                    .HasForeignKey(d => d.DegreeId)
                    .HasConstraintName("FK__GraduateT__Degre__3B75D760");

                entity.HasOne(d => d.Stream)
                    .WithMany(p => p.GraduateTrainees)
                    .HasForeignKey(d => d.StreamId)
                    .HasConstraintName("FK__GraduateT__Strea__3C69FB99");
            });

            modelBuilder.Entity<Streams>(entity =>
            {
                entity.HasKey(e => e.StreamId)
                    .HasName("PK__Streams__07C87A9261B6B4F7");

                entity.Property(e => e.StreamDescription).IsUnicode(false);

                entity.Property(e => e.StreamName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Degree)
                    .WithMany(p => p.Streams)
                    .HasForeignKey(d => d.DegreeId)
                    .HasConstraintName("FK__Streams__DegreeI__3D5E1FD2");
            });

            OnModelCreatingGeneratedProcedures(modelBuilder);
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
        public virtual List<TraineeEnrollmentReportResult> TraineeEnrollmentReport(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new[]
            {
                parameterreturnValue,
            };

            var results = Set<TraineeEnrollmentReportResult>()
                                   .FromSqlRaw("EXEC [dbo].[TraineeEnrollmentReport]", sqlParameters)
                                   .ToList();

            returnValue?.SetValue(parameterreturnValue.Value);

            return results;
        }
    }
}